#include <Arduboy2.h>
#include <ArduboyTones.h>

Arduboy2 arduboy;
ArduboyTones sound(arduboy.audio.enabled);
bool despa = true;
int showver = 0;
int menu;
int notshown = 1;
int pause = 0;
int level;
bool ending = true;
bool levelstart;
int x1 = 10;
int x2 = 10;
int y1 = 50;
int y2 = 60;
int version1 = 1;
int versiondec = 0;
//my logo
const unsigned char logo[] PROGMEM = {
  0x15, 0xa, 0x5, 0x2, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x2, 0x5, 0xa, 0x15, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x1, 0x00, 0x00, 0x00, 0x00, 0xff, 0x3, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x3, 0x3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x20, 0x10, 0x8, 0x8, 0x4, 0x4, 0x4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x10, 0x8, 0x8, 0x8, 0x8, 0x10, 0x10, 0x00, 0x20, 0x20, 0x20, 0x20, 0xf8, 0x2f, 0x20, 0x20, 0x30, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x60, 0x10, 0xc, 0x2, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xfe, 0x3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x10, 0x10, 0x10, 0x10, 0x10, 0x18, 0xc, 0x2, 0x1, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x4, 0x7c, 0x8f, 0x8, 0x88, 0x84, 0x3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x30, 0x18, 0x4, 0x3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x40, 0x80, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7, 0x8, 0x11, 0x10, 0xff, 0xf2, 0x11, 0x12, 0x1c, 0xf4, 0xf6, 0x19, 0x11, 0xe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x50, 0xa0, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0xa0, 0x50, 0xa8, 
};
int cheat = 0;
void turtlelogo(){
  arduboy.clear();
  arduboy.drawBitmap(0, 0, logo, 128, 64, WHITE);
  arduboy.display();
  sound.tone(975, 590);
  delay(590);
  sound.tone(950, 410);
  delay(410);
  sound.tone(900, 390);
  delay(390);
  sound.tone(821, 275);
  delay(300);
  arduboy.clear();
  arduboy.display();
}
void setup(){
  //init things
  arduboy.begin();
  turtlelogo();
  //verify if on menu
  menu = 1;
}

void loop(){

  while(menu == 1){
    //title
    arduboy.println("    Is this Loss?");
    arduboy.print("      THE GAME");
    //divide line down
    arduboy.drawLine(60,20,60,57);
    //divide line right
    arduboy.drawLine(41,38,79,38);
    //frame 1
    arduboy.drawLine(47,35,47,25);
    //first person frame two
    arduboy.drawLine(65,35,65,25);
    //second person frame two
    arduboy.drawLine(75,35,75,29);
    //first person frame 3
    arduboy.drawLine(42,55,42,45);
    //2 person frame 3
    arduboy.drawLine(50,55,50,45);
    //1 person frame 4
    arduboy.drawLine(64,55,64,45);
    //laid down persom frame 4
    arduboy.drawLine(70,52,78,52);
    //display it now father
    arduboy.display();
    //does nothing while no buttons are pressed; continues when buttons are
    //pressed
    while (!arduboy.buttonsState()) { }
    sound.tone(500, 23);
    delay(100);
    if (arduboy.pressed(DOWN_BUTTON + UP_BUTTON)){
      
      cheat = 1;
    }
  
    menu = 0;
  }
  //error checking
  if (menu > 1){
    arduboy.clear();
    arduboy.println("error update to"); 
    arduboy.println("latest github code");
    arduboy.println("self correcting...");
    arduboy.print("Cause: Corruption");
    level = 1;
    menu = 0;
    arduboy.display();
    delay(250);
    arduboy.clear();
  }
  arduboy.clear();
  level = 1;
  arduboy.display();
  levelstart = true;
  //cheat mode for easy development
  while (cheat == 1){
    arduboy.clear();
    arduboy.print("which level: ");
    arduboy.print(level);
    if (arduboy.pressed(UP_BUTTON)){
      level = level + 1;
    }
    if (arduboy.pressed(DOWN_BUTTON)){
      level = level - 1;
    }
    if (level > 4){
      level = 4;
    }
    if (level < 1){
      level = 1;
    }
    delay(150);
    if (arduboy.pressed(A_BUTTON)){
      sound.tone(500, 23);
      delay(23);
      sound.tone(410, 23);
      cheat = 0;
    }
    if (arduboy.pressed(B_BUTTON)){
      sound.tone(500, 23);
      delay(23);
      sound.tone(410, 23);
      cheat = 0;
    }
    arduboy.display();
  }
  while (level == 1){
    level1();
  }
  while (level == 2){
    level2();
  }
  while (level == 3){
    level3();
  }
  while (level == 4){
    level4();
  }
}
void level1(){
  //drawdoor
  arduboy.drawLine(127,49,127,60);
  arduboy.drawLine(117,60,117,49);
  arduboy.drawLine(117,48,127,48);
  //draw character based on choords
  arduboy.drawLine(x1,y1,x2,y2);
  arduboy.display();
  //move right
  if (arduboy.pressed(RIGHT_BUTTON)){
    x1 = x1 + 3;
    x2 = x2 + 3;
    arduboy.display();
    delay(30);
  }
  //move left
  if (arduboy.pressed(LEFT_BUTTON)){
    x1 = x1 - 3;
    x2 = x2 - 3;
    arduboy.display();
    delay(30);
  }
  arduboy.display();
  //detect pause
  if (arduboy.pressed(LEFT_BUTTON + UP_BUTTON)){
    sound.tone(500, 23);
    pause = 1;
  }
  //pause 
  if (pause == 1){
    arduboy.setCursor(50,30);
    arduboy.print("pause");
    arduboy.display();
    //the delay makes it so the pause
    //combination isn't recognised
    //as an unpause button
    delay(200);
    while (!arduboy.buttonsState()){ }
    pause = 0;
  }
  arduboy.display();
  //check if off right of the screen
  if (x1 > 128){
    x1 = 127;
    x2 = 127;
    arduboy.display();
  }
  //check if off left of the screen 
  if (x1 < 0){
    x1 = 1;
    x2 = 1;
    arduboy.display();
  }
  arduboy.display();
  //show ver number
  if (arduboy.pressed(DOWN_BUTTON + B_BUTTON)){
    showver = 1;
  }
  if (showver == 1){
    sound.tone(500, 23);
    arduboy.clear();
    arduboy.setCursor(35,30);
    arduboy.print("Version: ");
    arduboy.print(version1);
    arduboy.print(".");
    arduboy.print(versiondec);
    arduboy.display();
    delay(999);
    showver = 0;
  }
  arduboy.display();
  //detect if in door
  if(x1 > 117){
    if (x1 < 128){
      //advance the level with a
      if (arduboy.pressed(A_BUTTON)){
        sound.tone(500, 23);
        arduboy.clear();
        level = 2;
        arduboy.display();
        //move character back 100 pixels, because the door moves back
        //100 pixels
        x2 = x2 - 100;
        x1 = x1 - 100;
      }
      //also advance with b
      if (arduboy.pressed(B_BUTTON)){
        sound.tone(500, 23);
        arduboy.clear();
        level = 2;
        arduboy.display();
        //see first time
        x2 = x2 - 100;
        x1 = x1 - 100;
      }
      //also advance with up
      if (arduboy.pressed(UP_BUTTON)){
        sound.tone(500, 23);
        arduboy.clear();
        level = 2;
        arduboy.display();
        //see first time
        x2 = x2 - 100;
        x1 = x1 - 100;
      }
    }
  }
  //fix screen tearing
  arduboy.clear();
  
}
void level2(){
  arduboy.clear();
  //drawdoor(it is 100 less than its old position)
  arduboy.drawLine(27,49,27,60);
  arduboy.drawLine(17,60,17,49);
  arduboy.drawLine(17,48,27,48);
  //draw character based on choords
  arduboy.drawLine(x1,y1,x2,y2);
  //draw hospital reception desk
  arduboy.drawLine(101,55,106,55);
  arduboy.drawLine(101,55,101,60);
  arduboy.drawLine(106,60,106,55);
  //draw receptionist
  arduboy.drawLine(114,60,114,53);
  arduboy.display();
  //move right
  if (arduboy.pressed(RIGHT_BUTTON)){
    x1 = x1 + 3;
    x2 = x2 + 3;
    arduboy.display();
    delay(30);
  }
  //move left
  if (arduboy.pressed(LEFT_BUTTON)){
    x1 = x1 - 3;
    x2 = x2 - 3;
    arduboy.display();
    delay(30);
  }
  arduboy.display();
  //detect position
  if (x1 < 101){
    if (x1 > 98){
      if (arduboy.pressed(A_BUTTON)){
        sound.tone(500, 23);
        arduboy.print("The doctor knows her");
        arduboy.display();
        delay(300);
        while (!arduboy.buttonsState()) { }
        sound.tone(500, 23);
        arduboy.clear();
        level = 3;
        x1 = 1;
        x2 = 1;
      }
      if (arduboy.pressed(B_BUTTON)){
        sound.tone(500, 23);
        arduboy.print("The doctor knows her");
        arduboy.display();
        delay(300);
        while (!arduboy.buttonsState()) { }
        sound.tone(500, 23);
        arduboy.clear();
        x1 = 1;
        x2 = 1;
        level = 3;
      }
    }
  }
  //detect pause
  if (arduboy.pressed(LEFT_BUTTON + UP_BUTTON)){
    sound.tone(500, 23);
    pause = 1;
  }
  //pause 
  if (pause == 1){
    arduboy.setCursor(50,30);
    arduboy.print("pause");
    arduboy.display();
    //the delay makes it so the pause
    //combination isn't recognised
    //as an unpause button
    delay(200);
    while (!arduboy.buttonsState()){ }
    pause = 0;
  }
  arduboy.display();
  //check if off right of reception
  if (x1 > 100){
    x1 = 99;
    x2 = 99;
    arduboy.display();
  }
  //check if off left of the screen 
  if (x1 < 0){
    x1 = 1;
    x2 = 1;
    arduboy.display();
  }
  arduboy.display();
  //show ver number
  if (arduboy.pressed(DOWN_BUTTON + B_BUTTON)){
    sound.tone(500, 23);
    showver = 1;
  }
  if (showver == 1){
    arduboy.clear();
    arduboy.setCursor(35,30);
    arduboy.print("Version: ");
    arduboy.print(version1);
    arduboy.print(".");
    arduboy.print(versiondec);
    arduboy.display();
    delay(999);
    showver = 0;
  }
  //fix screen tearing
  arduboy.display();
}
void level3(){
  arduboy.clear();
  //draw character based on choords
  arduboy.drawLine(x1,y1,x2,y2);
  //draw doctor based on choords
  arduboy.drawLine(x1 + 5,y1 - 1,x2 + 5,y2);
  arduboy.display();
  while (notshown == 1){
    arduboy.clear();
    arduboy.print("Here she lays );");
    arduboy.display();
    delay(210);
    //Closes dialog
    if (arduboy.pressed(A_BUTTON)){
      sound.tone(500, 23);
      notshown = 0;
    }
    if (arduboy.pressed(B_BUTTON)){
      sound.tone(500, 23);
      notshown = 0;
    }
  }
  //moves characters forward
  x1 = x1 + 2;
  x2 = x2 + 2;
  delay(100);
  if (x1 > 128){
    arduboy.clear();
    x1 = 0;
    x2 = 0;
    level = 4;
  }
  arduboy.display();
}

void level4(){
  arduboy.clear();
  //draw character based on choords
  arduboy.drawLine(x1,y1,x2,y2);
  //draw person2
  arduboy.drawLine(55,55,65,55);
  //increase choords until at the bed
  for( ; x1 < 50; ){
    arduboy.clear();
    x1 = x1 + 2;
    x2 = x2 + 2;
    arduboy.drawLine(x1,y1,x2,y2);
    arduboy.drawLine(55,55,65,55);
    arduboy.display();
    delay(100);
  }
  while (ending == true){
    arduboy.println("So sad...");
    arduboy.display();
    delay(1500);
    arduboy.print("Alexa play despacito");
    arduboy.display();
    ending = false;
    arduboy.clear();
  }
  arduboy.println("So sad...");
  arduboy.print("Alexa play despacito");
  while(despa == true){
    playdespa();
    despa = false;
  }
  delay(200);
  if (arduboy.pressed(A_BUTTON)){
    restart();
  }
  if (arduboy.pressed(B_BUTTON)){
    restart();
  }
  arduboy.display();
}

void playdespa(){
  sound.tone(587, 500);
  delay(500);
  sound.tone(554, 300);
  delay(300);
  sound.tone(494, 250);
  delay(255);
  sound.tone(370, 250);
  delay(250);
  
}
void restart(){
  arduboy.clear();
  delay(200);
  turtlelogo();
  despa = true;
  menu = 1;
  level = 0;
}

